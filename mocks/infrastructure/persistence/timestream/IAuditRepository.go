// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"
	model "grafana-api/domain/model"

	mock "github.com/stretchr/testify/mock"
)

// IAuditRepository is an autogenerated mock type for the IAuditRepository type
type IAuditRepository struct {
	mock.Mock
}

// SaveAudit provides a mock function with given fields: ctx, auditDTO
func (_m *IAuditRepository) SaveAudit(ctx context.Context, auditDTO model.AuditDTO) error {
	ret := _m.Called(ctx, auditDTO)

	if len(ret) == 0 {
		panic("no return value specified for SaveAudit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.AuditDTO) error); ok {
		r0 = rf(ctx, auditDTO)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIAuditRepository creates a new instance of IAuditRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIAuditRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IAuditRepository {
	mock := &IAuditRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
